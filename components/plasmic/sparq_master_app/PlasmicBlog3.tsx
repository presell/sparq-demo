// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: gzk14oXgaAXzvGY4rg9Zpf
// Component: BuTSxi37rUl

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Reviews from "../../Reviews"; // plasmic-import: WNewsjzP5x/component
import AsFeaturedIn from "../../AsFeaturedIn"; // plasmic-import: AG2XBIi7yI/component
import ReviewCard from "../../ReviewCard"; // plasmic-import: SHXv-rndbh/component
import SideCta from "../../SideCta"; // plasmic-import: sdBBiB4Cb3/component

import { useScreenVariants as useScreenVariantsbai21PvFaWEr } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: BAI21pvFA_wEr/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_sparq_master_app.module.css"; // plasmic-import: gzk14oXgaAXzvGY4rg9Zpf/projectcss
import sty from "./PlasmicBlog3.module.css"; // plasmic-import: BuTSxi37rUl/css

export type PlasmicBlog3__VariantMembers = {};
export type PlasmicBlog3__VariantsArgs = {};
type VariantPropType = keyof PlasmicBlog3__VariantsArgs;
export const PlasmicBlog3__VariantProps = new Array<VariantPropType>();

export type PlasmicBlog3__ArgsType = {};
type ArgPropType = keyof PlasmicBlog3__ArgsType;
export const PlasmicBlog3__ArgProps = new Array<ArgPropType>();

export type PlasmicBlog3__OverridesType = {
  root?: p.Flex<"div">;
  nav?: p.Flex<"div">;
  headline?: p.Flex<"div">;
  body?: p.Flex<"div">;
  article?: p.Flex<"div">;
  articleBody?: p.Flex<"div">;
  asFeaturedIn?: p.Flex<typeof AsFeaturedIn>;
  link?: p.Flex<"a"> & Partial<LinkProps>;
  freeBox?: p.Flex<"div">;
  sideCta?: p.Flex<typeof SideCta>;
};

export interface DefaultBlog3Props {}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicBlog3__RenderFunc(props: {
  variants: PlasmicBlog3__VariantsArgs;
  args: PlasmicBlog3__ArgsType;
  overrides: PlasmicBlog3__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsbai21PvFaWEr()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          {(
            hasVariant(globalVariants, "screen", "largestMobile")
              ? true
              : hasVariant(globalVariants, "screen", "smallestMobile")
              ? true
              : true
          ) ? (
            <div
              data-plasmic-name={"nav"}
              data-plasmic-override={overrides.nav}
              className={classNames(projectcss.all, sty.nav)}
            >
              <div className={classNames(projectcss.all, sty.columns__suIfn)}>
                <div className={classNames(projectcss.all, sty.column__zuUlL)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___4Dami)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/sparq_master_app/images/logopng.png",
                      fullWidth: 276,
                      fullHeight: 46,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__taGnx)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__eO269
                    )}
                  >
                    {'"The Evolution of Inhalation"'}
                  </div>
                </div>
              </div>
            </div>
          ) : null}
          <div
            data-plasmic-name={"headline"}
            data-plasmic-override={overrides.headline}
            className={classNames(projectcss.all, sty.headline)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__irwG8
              )}
            >
              {"Hard Hitting Zero-Nic Pods Pack Intense Mango or Mint Flavor!"}
            </div>
            <button
              className={classNames(
                projectcss.all,
                projectcss.button,
                projectcss.__wab_text,
                sty.button__cPtL
              )}
              disabled={false}
              link={
                "https://www.quittinghacks.com/rechargeable-offer/" as const
              }
            >
              {"CLAIM FREE PODS 👉"}
            </button>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__y9AYe
              )}
            >
              <React.Fragment>
                <React.Fragment>
                  {"This new invention is turning \n"}
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"bad habits"}
                </span>
                <React.Fragment>{" into a "}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"healthy ones"}
                </span>
                <React.Fragment>{"..."}</React.Fragment>
              </React.Fragment>
            </div>
            <Reviews
              className={classNames("__wab_instance", sty.reviews__lIUby)}
            />

            {true ? (
              <div className={classNames(projectcss.all, sty.columns__lQuoz)}>
                <div className={classNames(projectcss.all, sty.column__qfY1W)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__tyxbY)}
                    displayHeight={"19px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"none" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"123px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/sparq_master_app/images/starpng2.png",
                      fullWidth: 142,
                      fullHeight: 21,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__xIydA)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dpvE
                    )}
                  >
                    {"Rated 4.9 Stars By 100,000+ Customers"}
                  </div>
                </div>
              </div>
            ) : null}
          </div>
          <div
            data-plasmic-name={"body"}
            data-plasmic-override={overrides.body}
            className={classNames(projectcss.all, sty.body)}
          >
            <div className={classNames(projectcss.all, sty.columns__xrSb)}>
              <div
                data-plasmic-name={"article"}
                data-plasmic-override={overrides.article}
                className={classNames(projectcss.all, sty.article)}
              >
                {true ? (
                  <div
                    data-plasmic-name={"articleBody"}
                    data-plasmic-override={overrides.articleBody}
                    className={classNames(projectcss.all, sty.articleBody)}
                  >
                    <AsFeaturedIn
                      data-plasmic-name={"asFeaturedIn"}
                      data-plasmic-override={overrides.asFeaturedIn}
                      className={classNames("__wab_instance", sty.asFeaturedIn)}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__rurX)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100%" as const}
                      link={
                        "https://www.quittinghacks.com/rechargeable-offer/" as const
                      }
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/sparq_master_app/images/_9B498Fb8RechargableGif11Gif.gif",
                        fullWidth: 614,
                        fullHeight: 332,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ltyVj
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>
                          {
                            "Imagine being nic-free but still getting that oh-so-satisfying throat hit along with delicious natural flavoring?\n\nIt almost sounds too good to be true, right? \n\nThe solution is simple... \n\nChoose natural ingredients, "
                          }
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"NOT"}
                        </span>
                        <React.Fragment>
                          {" Stimulants and Harmful Chemicals:"}
                        </React.Fragment>
                      </React.Fragment>
                    </div>
                    <p.PlasmicLink
                      data-plasmic-name={"link"}
                      data-plasmic-override={overrides.link}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link
                      )}
                      component={Link}
                      href={
                        "https://www.quittinghacks.com/rechargeable-offer/" as const
                      }
                      platform={"nextjs"}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__kpOoP)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"100%" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/sparq_master_app/images/screenshot20230224At43442PMpng.png",
                          fullWidth: 2352,
                          fullHeight: 802,
                          aspectRatio: undefined
                        }}
                      />
                    </p.PlasmicLink>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__c337L
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>
                          {
                            "Sparq Zero® is the evolution of inhalation. \n\nOur revolutionary diffuser comes in your choice of natural Sweet Mango or natural Cool Mint, providing you with the throat hit and intense flavoring you’re looking for... "
                          }
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"without the guilt! "}
                        </span>
                        <React.Fragment>
                          {
                            "\n\nWe spent 6 years developing a device that was health-focused, lab-tested and that produced real throat hit and flavor that would effectively eliminate your cravings."
                          }
                        </React.Fragment>
                      </React.Fragment>
                    </div>
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__vUPdL)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100%" as const}
                      link={
                        "https://www.quittinghacks.com/rechargeable-offer/" as const
                      }
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/sparq_master_app/images/fbfd287ERechargableGif21Gif.gif",
                        fullWidth: 614,
                        fullHeight: 332,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qm3Kb
                      )}
                    >
                      {
                        "Absolutely no expense was spared with regard to design-form and function:\n\nThis ultra-modern metal device is slim, compact, odorless, and easy to use at any time or place."
                      }
                    </div>
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__wmNip)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100%" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/sparq_master_app/images/_4B6E6Ed1Devicegif.gif",
                        fullWidth: 669,
                        fullHeight: 575,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___1Jb4P
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>
                          {
                            "Plus it comes it comes in your choice of two delicious flavors, Sweet Mango or Cool Mint!\n\nWe even offer a "
                          }
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"money-back guarantee"}
                        </span>
                        <React.Fragment>
                          {
                            " if you don't absolutely love the taste and throat hit. "
                          }
                        </React.Fragment>
                      </React.Fragment>
                    </div>
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__muZ1H)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100%" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/sparq_master_app/images/_6Bb5E2F0Image31000000000000000000028Png.png",
                        fullWidth: 614,
                        fullHeight: 332,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__t28F5
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>
                          {
                            "Most importantly, ALL of our formulations have undergone extensive lab-testing.\n\nThe test results verified our all-natural, plant-based pod ingredients are safe even when heated into a vapor.\n\n"
                          }
                        </React.Fragment>
                        {
                          <ul
                            className={classNames(
                              projectcss.all,
                              projectcss.ul,
                              sty.ul__ieMff
                            )}
                          >
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__rlDLj
                              )}
                            >
                              {
                                "no harmful byproducts produced during the heating process (Gas chromatography)"
                              }
                            </li>
                          </ul>
                        }
                        <React.Fragment>{"\n"}</React.Fragment>
                        {
                          <ul
                            className={classNames(
                              projectcss.all,
                              projectcss.ul,
                              sty.ul__adY1
                            )}
                          >
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__l6Ge5
                              )}
                            >
                              {"no evidence of carbonyl compounds"}
                            </li>
                          </ul>
                        }
                        <React.Fragment>{"\n"}</React.Fragment>
                        {
                          <ul
                            className={classNames(
                              projectcss.all,
                              projectcss.ul,
                              sty.ul__ar1Pi
                            )}
                          >
                            <li
                              className={classNames(
                                projectcss.all,
                                projectcss.li,
                                projectcss.__wab_text,
                                sty.li__fup3H
                              )}
                            >
                              {
                                "no evidence of “bad characters” known in the industry, including Diacetyl, Acrolein and Acetoin"
                              }
                            </li>
                          </ul>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__mwYxg)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100%" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/sparq_master_app/images/_12A7A7BbTestingSmallerImage10Yy0Fa0000000000000281Png.png",
                        fullWidth: 1258,
                        fullHeight: 550,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__mbwSi
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"Figure 1:"}
                        </span>
                        <React.Fragment>
                          {
                            " ISO-Accredited Laboratory certified safety and ensured the liquid remains stable even when heated."
                          }
                        </React.Fragment>
                      </React.Fragment>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__oGZbS
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>
                          {
                            "We are incredibly proud to state that we have helped over 100,000 people quit while still allowing them to enjoy their habit, without any guilt!\n\nWe’ve made it easy for you to do the same, by offering a "
                          }
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"FREE"}
                        </span>
                        <React.Fragment>
                          {
                            " box of our Sweet Mango or Cool Mint pods, with your first purchase, auto-applied at checkout."
                          }
                        </React.Fragment>
                      </React.Fragment>
                    </div>
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___3NzOe)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100%" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/sparq_master_app/images/_7048E521Hit110000000000000000000281Png.png",
                        fullWidth: 614,
                        fullHeight: 332,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___70Aoy
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {
                            "Click Here to Claim Free Sweet Mango or Cool Mint Pods!"
                          }
                        </span>
                      </React.Fragment>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__i2SJf
                      )}
                    >
                      {"Fast Same Day Shipping"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.columns___3FIew
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__pbAme
                        )}
                      >
                        <button
                          className={classNames(
                            projectcss.all,
                            projectcss.button,
                            projectcss.__wab_text,
                            sty.button__vd7Ns
                          )}
                        >
                          {"CLAIM FREE PODS 👉"}
                        </button>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__wUzh9
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__vl298)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/sparq_master_app/images/dividersvg.undefined",
                            fullWidth: 5,
                            fullHeight: 150,
                            aspectRatio: 0.033333
                          }}
                        />
                      </div>
                      <div
                        className={classNames(projectcss.all, sty.column__zTx9)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__f19V3
                          )}
                        >
                          {"100,000+ Happy Customers! In Stock - Ships Now."}
                        </div>
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__wKt6)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/sparq_master_app/images/starpng2.png",
                            fullWidth: 142,
                            fullHeight: 21,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                    </div>
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___0ZUgi)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={"100%" as const}
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/sparq_master_app/images/silverDeviceOutrogif.gif",
                        fullWidth: 669,
                        fullHeight: 575,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                ) : null}
              </div>
              {true ? (
                <div className={classNames(projectcss.all, sty.column__qX8Yv)}>
                  <div
                    data-plasmic-name={"freeBox"}
                    data-plasmic-override={overrides.freeBox}
                    className={classNames(projectcss.all, sty.freeBox)}
                  >
                    <ReviewCard
                      className={classNames(
                        "__wab_instance",
                        sty.reviewCard__r5CI
                      )}
                    />

                    <ReviewCard
                      className={classNames(
                        "__wab_instance",
                        sty.reviewCard__eYbP
                      )}
                    />

                    <ReviewCard
                      className={classNames(
                        "__wab_instance",
                        sty.reviewCard__z7ZAi
                      )}
                    />

                    <SideCta
                      data-plasmic-name={"sideCta"}
                      data-plasmic-override={overrides.sideCta}
                      className={classNames("__wab_instance", sty.sideCta)}
                    />
                  </div>
                </div>
              ) : null}
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "nav",
    "headline",
    "body",
    "article",
    "articleBody",
    "asFeaturedIn",
    "link",
    "freeBox",
    "sideCta"
  ],
  nav: ["nav"],
  headline: ["headline"],
  body: [
    "body",
    "article",
    "articleBody",
    "asFeaturedIn",
    "link",
    "freeBox",
    "sideCta"
  ],
  article: ["article", "articleBody", "asFeaturedIn", "link"],
  articleBody: ["articleBody", "asFeaturedIn", "link"],
  asFeaturedIn: ["asFeaturedIn"],
  link: ["link"],
  freeBox: ["freeBox", "sideCta"],
  sideCta: ["sideCta"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  nav: "div";
  headline: "div";
  body: "div";
  article: "div";
  articleBody: "div";
  asFeaturedIn: typeof AsFeaturedIn;
  link: "a";
  freeBox: "div";
  sideCta: typeof SideCta;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicBlog3__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicBlog3__VariantsArgs;
    args?: PlasmicBlog3__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicBlog3__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicBlog3__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicBlog3__ArgProps,
          internalVariantPropNames: PlasmicBlog3__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicBlog3__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicBlog3";
  } else {
    func.displayName = `PlasmicBlog3.${nodeName}`;
  }
  return func;
}

export const PlasmicBlog3 = Object.assign(
  // Top-level PlasmicBlog3 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    nav: makeNodeComponent("nav"),
    headline: makeNodeComponent("headline"),
    body: makeNodeComponent("body"),
    article: makeNodeComponent("article"),
    articleBody: makeNodeComponent("articleBody"),
    asFeaturedIn: makeNodeComponent("asFeaturedIn"),
    link: makeNodeComponent("link"),
    freeBox: makeNodeComponent("freeBox"),
    sideCta: makeNodeComponent("sideCta"),

    // Metadata about props expected for PlasmicBlog3
    internalVariantProps: PlasmicBlog3__VariantProps,
    internalArgProps: PlasmicBlog3__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicBlog3;
/* prettier-ignore-end */
